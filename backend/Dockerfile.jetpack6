# BASE IMAGE
FROM nvcr.io/nvidia/l4t-cuda:12.6.11-runtime

# ENVIRONMENT VARIABLES
ENV DEBIAN_FRONTEND=noninteractive
ENV PYTHONUNBUFFERED=1
ENV CUDA_HOME=/usr/local/cuda-12.6
ENV CPATH=$CUDA_HOME/include:$CPATH
ENV LIBRARY_PATH=$CUDA_HOME/lib64:$LIBRARY_PATH
ENV LD_LIBRARY_PATH=$CUDA_HOME/targets/aarch64-linux/lib/stubs:$LD_LIBRARY_PATH

# SYSTEM DEPENDENCIES
RUN apt-get update && apt-get install -y --no-install-recommends \
    python3.10 \
    python3.10-dev \
    python3-pip \
    python3-setuptools \
    build-essential \
    wget \
    git \
    gcc \
    g++ \
    libglib2.0-0 \
    libglib2.0-dev \
    libsm6 \
    libxext6 \
    libxrender-dev \
    libgl1 \
    && rm -rf /var/lib/apt/lists/*

RUN wget https://repo.download.nvidia.com/jetson/jetson-ota-public.asc -O /etc/apt/trusted.gpg.d/nvidia.asc && \
    echo "deb https://repo.download.nvidia.com/jetson/common r36.4 main" > /etc/apt/sources.list.d/nvidia-l4t.list && \
    echo "deb https://repo.download.nvidia.com/jetson/t234 r36.4 main" >> /etc/apt/sources.list.d/nvidia-l4t.list && \
    apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2204/arm64/7fa2af80.pub && \
    echo "deb https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2204/arm64/ /" | tee /etc/apt/sources.list.d/cuda-arm64.list

RUN apt-get update && apt-get install -y --no-install-recommends --allow-change-held-packages \
    tensorrt \
    python3-libnvinfer \
    python3-libnvinfer-dev \
    libcudnn9 libcudnn9-dev \
    libopenblas-base \
    cuda-cupti-12-6 \
    libcublas-12-6 \
    cuda-toolkit-12-6 \
    && rm -rf /var/lib/apt/lists/*


# set Python default version
RUN ln -sf /usr/bin/python3.10 /usr/bin/python && \
    ln -sf /usr/bin/pip3 /usr/bin/pip


# application dependencies
WORKDIR /app

# copy requirements.txt
COPY requirements.txt .

# install Python dependencies
RUN pip install --no-cache-dir --upgrade pip setuptools wheel && \
    pip install --no-cache-dir -r requirements.txt && \
    pip install --no-cache-dir torch torchvision torchaudio --index-url https://pypi.jetson-ai-lab.io/jp6/cu126 && \
    pip install --no-cache-dir onnxruntime-gpu --index-url https://pypi.jetson-ai-lab.io/jp6/cu126 && \
    pip install --no-cache-dir onnx==1.18.0 && \
    pip install --no-cache-dir openvino-dev==2024.6.0 && \
    pip install --no-cache-dir paddleocr==3.0.0 && \
    pip install --no-cache-dir pycuda --index-url https://pypi.jetson-ai-lab.io/jp6/cu126 || echo "pycuda 安装失败,跳过"



# copy project code
COPY . .

RUN pip install /app/backend_apps/paddlepaddle_gpu-0.0.0-cp310-cp310-linux_aarch64.whl || echo "PaddlePaddle 安装失败, 跳过"

# delete unnecessary files
RUN rm -rf /app/backend_apps/

# create required directories
RUN mkdir -p data/models data/logs data/db data/temp_uploads

# start script
COPY scripts/entrypoint.sh /usr/local/bin/entrypoint.sh
RUN chmod +x /usr/local/bin/entrypoint.sh

ENTRYPOINT ["/usr/local/bin/entrypoint.sh"]

# 16. expose API port
EXPOSE 8000

# 17. default start command
CMD ["python", "run.py", "--prod", "--host", "0.0.0.0"]
