/**
 * Common Mixinï¼ŒIt has been injected into the global scope through the engineering tool,
 * you can use it directly without manually introduce it
 */

// ---------- Font ----------
// Line Height
.line-height(@font-size) {
    line-height: @font-size + 8;
}

// Font Size & Line Height
.text-size(@font-size) {
    font-size: @font-size;
    .line-height(@font-size);
}

// Ellipsis single line
.ellipsis() {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}

// Ellipsis multiple lines (Not compatible with all browsers)
.multipleEllipsis(@line: 2) {
    display: box;
    display: -webkit-box;
    overflow: hidden;
    text-overflow: ellipsis;
    word-break: break-all;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: @line;
}

// Required mark *
.required-mark(@color: var(--text-color-red), @font-size: @font-size-base) {
    display: inline-block;
    margin-right: @margin-xxs;
    font-family: SimSun, sans-serif;
    font-size: @font-size;
    color: @color;
    content: '*';
}

/**
 * Triangle
 * @width: Border width
 * @config: The position and color of the triangle
 *
 * eg:
 * - bottom arrow `{ top: #f00 }`
 */
.triangle(@width, @config) {
    display: inline-block;
    width: 0;
    height: 0;
    vertical-align: middle;
    border: @width solid transparent;

    /* stylelint-disable */
    each(@config, {
        border-@{key}-color: @value;
    });
    /* stylelint-enable */
}

// ---------- Breakpoints ----------
/* stylelint-disable media-query-no-invalid */
.bp-up (@points, @content) {
    @media (min-width: @points) {
        @content();
    }
}

.bp-down (@points, @content) {
    @media (max-width: @points) {
        @content();
    }
}

.bp-between (@lower, @upper, @content) {
    @media (min-width: @min) and (max-width: @max) {
        @content();
    }
}
/* stylelint-enable */
